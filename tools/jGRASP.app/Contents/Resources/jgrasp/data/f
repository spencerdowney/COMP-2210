/a1 300 dict def a1 begin /a2 [0 0 0 2 0 1
0 2 0 2 0 3 0 3 0 2 0 4 0 2 1 0 0 4 1 1 0
4 1 2 0 4 -1 ] def /a3 [ [ 1 0 1 3 5 1 0 5
3 1 -1 ] [ 0 2 2 3 -1 ] [ 0 5 6 3 0 6 6 3
0 10 6 3 0 11 6 3 0 12 4 3 0 13 4 3 1 4 12
13 1 6 5 10 1 6 11 12 1 6 13 6 -1 ] [ 1 0
5 1 1 1 5 1 5 1 1 -1 ] a2 a2 a2 a2 a2 a2 a2
a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2
a2 a2 a2 a2 a2 a2 a2 a2 [ 7 1 4 53 -1 ] [
7 1 4 176 -1 ] [ 4 0 1 1 2 3 -1 ] [ 4 0 1
1 1 3 -1 ] [ 4 0 1 1 1 2 -1 ] [ 7 1 4 242
-1 ] a2 [ 11 4 1 1 1 5 0 -1 ] [ 10 5 6 1 0
-1 ] [ 9 0 5 3 6 -1 ] [ 12 -1 ] [ 4 174 4
170 -1 ] a2 [ 4 236 0 18 12 7 0 19 12 7 1
12 18 19 -1 ] [ 9 6 5 3 18 9 9 18 3 19 9 6
19 3 6 1 6 5 6 -1 ] [ 9 0 5 10 6 9 11 5 3
6 9 10 17 11 20 4 235 -1 ] [ 9 0 5 7 18 9
0 18 12 19 9 0 19 7 6 1 7 5 6 -1 ] [ 4 240
0 18 6 9 0 19 6 9 1 9 18 19 -1 ] [ 4 235 1
10 5 17 1 11 5 17 0 17 10 11 1 10 20 6 1 11
20 6 0 20 10 11 -1 ] [ 1 0 5 6 -1 ] [ 4 52
4 167 -1 ] [ 0 7 1 1 0 23 1 1 0 8 1 1 0 24
1 1 0 9 1 1 -1 ] [ 4 53 4 57 -1 ] [ 7 1 1
1 2 6 -1 ] [ 0 2 1 3 -1 ] [ 0 7 0 0 0 23 0
0 0 8 0 0 0 24 0 0 0 9 0 0 -1 ] [ 0 7 0 0
0 23 0 0 0 24 0 0 0 9 0 0 -1 ] [ 0 9 0 0 0
24 0 0 -1 ] [ 4 58 4 167 -1 ] [ 4 58 4 168
-1 ] [ 0 7 0 0 0 23 0 0 4 167 0 8 0 1 -1 ]
[ 4 58 4 167 4 194 -1] [ 4 60 4 167 4 194
-1] [ 4 3 4 167 -1 ] [ 4 3 4 168 -1 ] [ 4
3 4 169 -1 ] [ 4 3 4 190 -1 ] [ 4 54 16 -1
] a2 [ 0 7 0 0 0 23 0 0 4 190 0 8 0 1 -1 ]
[ 17 1 1 2 6 -1] [ 17 1 1 2 6 0 2 1 3 -1]
[ 17 0 2 1 3 -1] [ 17 0 2 0 3 -1] [-1 ] a2
a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2
a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2
a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2
a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2
a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2
a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 [ 1 1
1 6 1 2 2 6 0 1 1 3 4 1 -1 ] [ 4 167 1 2 5
6 -1 ] [ 1 1 5 3 1 2 5 2 0 3 1 3 4 1 -1 ]
[ 4 166 1 1 3 6 -1 ] [ 0 1 0 3 0 2 0 3 -1
] [ 0 3 0 3 0 2 0 3 -1 ] [ 1 1 5 6 -1 ] [
4 167 4 57 -1 ] [ 1 1 5 3 0 3 1 3 -1 ] [ 1
1 5 2 4 57 -1 ] [ 1 1 2 6 4 57 -1 ] [ 1 1
2 6 4 57 -1 ] a2 [ 1 0 1 6 1 1 1 6 5 1 0 -1
] a2 [ 1 0 5 3 1 1 5 3 5 3 1 -1 ] [ 1 0 1
6 1 1 2 6 5 1 0 -1 ] [ 4 1 0 9 1 1 8 -1 ]
[ 11 4 1 -1 ] [ 1 1 2 6 0 2 0 1 -1 ] a2 [
0 7 1 1 0 23 1 1 0 8 1 1 0 3 14 15 -1 ] a2
[ 0 2 1 1 -1 ] [ 0 2 0 3 -1 ] [ 4 178 0 7
1 1 -1 ] [ 7 1 1 1 5 2 -1 ] [ 7 1 -1 ] [ 0
7 1 1 0 23 1 1 4 185 0 24 1 1 0 9 1 1 -1 ]
[ 1 1 5 2 4 57 -1 ] [ 0 7 1 1 0 23 1 1 4 185
-1 ] [ 1 1 5 2 4 185 -1 ] [ 4 167 0 2 0 1
-1 ] [ 7 0 -1 ] [ 7 1 4 167 -1 ] [ 4 167 4
185 -1 ] [ 3 5 6 0 -1 ] [ 3 2 6 0 13 2 1 0
-1 ] [ 4 53 4 185 -1 ] [ 4 57 -1 ] [ 4 197
13 2 0 0 -1 ] [ 3 5 2 0 13 2 1 0 -1 ] [ 1
1 2 6 0 2 0 3 -1 ] a2 [ 0 1 1 3 4 57 -1 ]
[ 0 3 1 3 4 57 -1 ] [-1 ] [ 4 176 4 57 -1
] [ 0 5 0 7 0 6 0 7 2 0 -1 ] [ 4 176 4 185
-1 ] [ 4 235 4 217 -1 ] [ 7 0 4 53 -1 ] [
4 216 9 6 5 3 10 9 6 11 3 12 9 6 13 3 6 -1
] [ 9 0 5 3 10 9 0 11 3 12 6 0 10 5 11 0 2
9 0 13 3 6 9 5 12 3 13 -1 ] [ 9 0 5 7 6 -1
] [ 4 2 6 4 10 6 11 1 0 -1 ] [ 0 5 0 1 0 6
0 3 0 12 0 5 0 13 0 5 1 5 12 13 6 0 10 5 11
0 0 -1 ] [ 1 7 5 10 1 7 11 12 1 7 13 6 0 5
0 7 0 6 0 7 -1 ] [ 4 240 0 14 6 3 -1 ] [ 4
235 0 14 0 3 -1 ] [ 4 236 0 14 0 7 -1 ] [
1 6 5 6 0 5 6 3 9 6 14 3 6 -1 ] [ 0 5 0 3
9 0 14 3 6 -1 ] [ 1 7 5 6 0 5 0 7 9 0 14 7
6 -1 ] [ 7 0 4 176 -1 ] [ 0 5 0 1 0 14 0 3
0 6 0 3 -1 ] [ 4 218 0 14 0 7 -1 ] [ 13 6
1 1 3 16 6 1 0 16 8 3 0 15 8 3 1 8 15 16 -1
] [ 13 5 1 2 0 6 0 3 3 5 15 2 0 15 0 5 0 16
0 5 1 5 15 16 -1 ] [ 13 5 0 0 3 5 6 0 13 6
0 0 -1 ] [ 10 16 6 1 1 4 228 -1 ] [ 9 0 16
3 6 10 5 15 1 2 0 15 0 3 9 5 15 3 16 -1 ]
[ 10 5 6 0 0 -1 ] [ 0 2 0 6 4 240 -1 ] [ 0
5 0 3 0 6 0 3 -1 ] [ 0 5 0 7 0 6 0 7 1 7 5
6 -1 ] [ 6 0 21 13 22 1 1 6 13 21 3 22 0 1
-1 ] [ 4 235 14 -1 ] [ 6 0 21 13 22 1 0 6
13 21 3 22 0 0 -1 ] [ 0 5 6 3 0 6 6 3 1 6
5 6 -1 ] [ 4 244 9 6 5 3 10 9 6 11 3 12 9
6 13 3 6 -1 ] [ 1 0 5 3 1 1 5 2 5 3 1 -1 ]
[ 2 1 -1 ] [ 4 2 0 10 4 3 0 11 4 3 1 4 10
11 -1 ] [ 4 235 15 -1 ] [ 0 7 1 1 0 23 1 1
4 57 -1 ] [ 11 4 1 -1 ] a2 a2 a2 a2 a2 a2
a2 a2 ] def /a4 { /a5 exch def /a6 exch def
/a7 exch def /a8 exch def a5 a7 ne a6 a8 ne
and { a8 a6 lt { /a8 a8 f8 add def /a6 a6
f8 sub def } if a7 a5 lt { /a7 a7 f8 add def
/a5 a5 f8 sub def } if a8 a7 moveto a8 a5
lineto a6 a5 lineto a6 a7 lineto } if fill
} bind def /a0 { dup load exch dup load 1
add def } bind def /b1 { a3 exch get /b2 exch
def /b3 0 def { /b4 b2 /b3 a0 get def b4 9
eq { /b5 i3 b2 /b3 a0 get get def /b6 i2 b2
/b3 a0 get get def /b7 i3 b2 /b3 a0 get get
f0 add def /b8 i2 b2 /b3 a0 get get f9 add
def b5 b6 b7 b8 a4 } if b4 0 eq { /b6 i2 b2
/b3 a0 get get def /b8 b6 f9 add def /b5 i3
b2 /b3 a0 get get def /b7 i3 b2 /b3 a0 get
get f0 add def b6 0 ge { b5 b6 b7 b8 a4 }
if } if b4 1 eq { /b5 i3 b2 /b3 a0 get get
def /b7 b5 f0 add def /b6 i2 b2 /b3 a0 get
get def /b8 i2 b2 /b3 a0 get get f9 add def
b5 b6 b7 b8 a4 } if b4 3 eq { /b9 i2 b2 /b3
a0 get get def /b0 i2 b2 /b3 a0 get get f9
add def /c1 b2 /b3 a0 get def /c2 f0 def /c3
i3 3 get f0 add def /c4 i2 6 get f9 add def
f0 3 gt { /c2 f0 1 c3 c3 mul c4 c4 mul d3
div d3 div div add sqrt cvi mul def } if /c2
c2 .5 sub def /c5 c3 b9 c3 mul c4 div sub
c2 2 div sub def /c6 c3 b0 c3 mul c4 div sub
c2 2 div sub def c1 0 gt { /c7 i2 15 get f9
add c3 mul c4 div def /c5 c5 c7 add def /c6
c6 c7 add def c1 2 eq { /c5 c5 c3 sub def
/c6 c6 c3 sub def } if } if c5 f8 add b9 f8
add moveto c5 c2 add f8 sub c3 le { c5 c2
add b9 f8 add lineto } { c3 f8 sub b9 f8 add
lineto /c8 c5 c2 add c3 sub c4 mul c3 div
def c3 f8 sub b9 c8 add f8 add lineto } ifelse
c6 c2 add f8 sub b0 f8 sub lineto c6 f8 ge
{ c6 f8 add b0 f8 sub lineto } { f8 b0 f8
sub lineto /c8 c6 neg c4 mul c3 div def f8
b0 c8 sub f8 sub lineto } ifelse closepath
fill } if b4 13 eq b4 10 eq or { /b9 i2 b2
/b3 a0 get get def b4 10 eq { /b0 i2 b2 /b3
a0 get get f9 add def } { /b0 b9 f9 add def
} ifelse /c9 b2 /b3 a0 get def /c1 b2 /b3
a0 get def /c3 i3 3 get f0 add def /c4 i2
6 get f9 add def /c5 c3 b9 c3 mul c4 div sub
def /c6 c3 b0 c3 mul c4 div sub def c1 0 gt
{ /c7 i2 15 get f9 add c3 mul c4 div def /c5
c5 c7 add def /c6 c6 c7 add def c1 2 eq {
/c5 c5 c3 sub def /c6 c6 c3 sub def } if }
if c5 b9 f8 add moveto c6 b0 f8 sub lineto
/c0 c9 0 eq { f8 } { c3 f8 sub } ifelse def
c0 b0 f8 sub lineto c0 b9 f8 add lineto closepath
fill } if b4 12 eq { /e1 d1 2 div def /e2
d2 2 div def /c3 d1 2.5 div ceiling def /c4
c3 d3 mul .5 add cvi def d2 2 mod c4 2 mod
ne { /c4 c4 1 sub def /c3 c4 d3 div .5 add
cvi def } if /d5 c3 2 div cvi def d5 2 mul
d1 c3 sub c3 sub gt { /d5 d1 c3 sub c3 sub
2 div floor def } if d1 2 mod 0 eq { /d5 d5
.5 sub def } if d5 0 lt { /d5 .5 def /c3 c3
1 sub def } if /c4 c4 2 div def e1 d5 add
c3 add f8 sub e2 c4 sub f8 add moveto e1 d5
add f8 sub e2 c4 add f8 sub lineto e1 d5 sub
c3 sub f8 add e2 c4 add f8 sub lineto e1 d5
sub f8 add e2 c4 sub f8 add lineto closepath
fill } if b4 4 eq { /d4 b2 /b3 a0 get def
b2 b3 b4 d4 b1 /b4 exch def /b3 exch def /b2
exch def } if b4 5 eq { /b6 i2 b2 /b3 a0 get
get def /c9 b2 /b3 a0 get def /e2 b6 f9 2
div add def /e1 i3 1 get f0 add i3 0 get sub
2 div def e1 3 le e1 d3 mul 3 le or { /c4
e1 2 mul d3 mul .5 add cvi def /c4 c4 1 add
2 idiv def /d6 f9 def c9 0 eq { /e2 e2 cvi
def /c4 c4 neg def /d6 d6 neg def } { /e2
e2 .5 add cvi def } ifelse 0 e2 f0 e2 c4 add
d6 sub a4 e1 2 mul f0 sub e2 e1 2 mul e2 c4
add d6 sub a4 f0 e2 c4 add d6 sub e1 2 mul
f0 sub e2 c4 add a4 } { matrix currentmatrix
e1 e2 translate 1 d3 scale c9 1 eq { 0 0 e1
f8 sub 0 180 arc 0 0 e1 f0 sub i4 add 180
0 arcn } { 0 0 e1 f8 sub 0 180 arcn 0 0 e1
f0 sub i4 add 180 0 arc } ifelse fill setmatrix
} ifelse } if b4 6 eq { /b5 i3 b2 /b3 a0 get
get def /b6 i2 b2 /b3 a0 get get def /b7 i3
b2 /b3 a0 get get def /b8 i2 b2 /b3 a0 get
get def /c9 b2 /b3 a0 get def /d7 b2 /b3 a0
get def /d8 b8 b6 sub f9 add 2 div def /d9
d8 d3 div def /d0 d8 f9 sub i4 add def d7
0 eq { c9 0 eq { b5 b6 b7 f0 add d9 sub b6
f9 add a4 b5 b8 b7 f0 add d9 sub b8 f9 add
a4 } { b5 d9 add b6 b7 f0 add b6 f9 add a4
b5 d9 add b8 b7 f0 add b8 f9 add a4 } ifelse
} if d7 1 eq { c9 0 eq { b5 b6 b7 f0 add d9
sub b8 f9 add a4 } { b5 d9 add b6 b7 f0 add
b8 f9 add a4 } ifelse } if newpath d7 2 ne
{ d8 3 le d9 3 le or { c9 0 eq { d7 0 eq {
b5 b6 b7 b6 f9 add a4 b5 b8 b7 b8 f9 add a4
} { b5 b6 b7 b8 f9 add a4 } ifelse b7 b6 f9
add b7 f0 add b8 a4 } { d7 0 eq { b5 f0 add
b6 b7 f0 add b6 f9 add a4 b5 f0 add b8 b7
f0 add b8 f9 add a4 } { b5 f0 add b6 b7 f0
add b8 f9 add a4 } ifelse b5 b6 f9 add b5
f0 add b8 a4 } ifelse } { matrix currentmatrix
c9 0 eq { b7 f0 add d9 sub b6 d8 add translate
1 d3 div 1 scale 0 0 d8 f8 sub 90 270 arcn
d7 0 eq { 0 0 d0 270 90 arc } if } { b5 d9
add b6 d8 add translate 1 d3 div 1 scale 0
0 d8 f8 sub 90 270 arc d7 0 eq { 0 0 d0 270
90 arcn } if } ifelse setmatrix } ifelse fill
} { matrix currentmatrix b7 f0 add d9 sub
b6 d8 add translate 1 d3 div 1 scale 0 0 d0
90 270 arcn setmatrix b7 f0 add d9 sub b6
f8 add lineto d1 f8 sub b6 f8 add lineto d1
f8 sub b8 f8 sub f9 add lineto b7 f0 add d9
sub b8 f8 sub f9 add lineto fill } ifelse
} if b4 8 eq { matrix currentmatrix /e1 i3
2 get f0 add i3 0 get sub 2 div def /e2 i2
3 get f9 add i2 1 get add 2 div def e1 e2
translate 1 d3 scale newpath 0 0 e1 f8 sub
0 360 arc closepath 0 0 e1 f0 sub i4 add 0
360 arc eofill setmatrix } if b4 7 eq { /c9
b2 /b3 a0 get def /e3 i2 2 get f9 2 div add
def /e4 d1 d2 2 idiv div def e4 d3 mul 2 lt
{ /e4 2 d3 div def } if e4 1 ge { /e4 e4 ceiling
def } { /e4 1 1 e4 div floor div def } ifelse
/c8 f8 def f0 2 idiv f0 2 div ne { /c8 e4
.5 mul f8 add def } if /e5 d1 c8 sub f8 sub
e4 div def /c5 c8 def /c6 d1 f8 sub def c9
0 ne { /c5 d1 c8 sub def /c6 f8 def } if c5
e3 moveto c6 e3 e5 add lineto c6 e3 e5 sub
lineto closepath fill 0 i2 2 get d1 i2 2 get
f9 add a4 } if b4 11 eq { f8 i2 2 get moveto
i3 1 get i2 0 get f8 add lineto f0 0 rlineto
i3 2 get f0 add f8 sub i2 2 get lineto 0 f9
rlineto i3 1 get f0 add i2 4 get f9 add f8
sub lineto f0 neg 0 rlineto f8 i2 2 get f9
add lineto closepath /c2 f0 def /c3 i3 1 get
def /c4 i2 2 get i2 0 get sub def f0 3 gt
{ /c2 f0 1 c3 c3 mul c4 c4 mul d3 div d3 div
div add sqrt cvi mul def } if /c2 c2 .5 sub
def /e6 c4 f9 sub c3 mul c4 div def c2 i2
2 get moveto c2 e6 add i2 0 get f9 add lineto
i3 2 get f0 add c2 sub e6 sub i2 0 get f9
add lineto i3 2 get f0 add c2 sub i2 2 get
lineto 0 f9 rlineto i3 2 get f0 add c2 sub
e6 sub i2 4 get lineto c2 e6 add i2 4 get
lineto c2 i2 2 get f9 add lineto closepath
eofill } if b4 2 eq { /d7 b2 /b3 a0 get def
/c2 f0 def /c3 d1 1 sub 2 idiv f0 sub def
/c4 i2 6 get f9 sub 2 div def f0 3 gt { /c2
f0 1 c3 c3 mul c4 c4 mul d3 div d3 div div
add sqrt cvi mul def } if i3 7 get f0 add
f9 moveto c2 f9 c4 add lineto i3 7 get f0
add i2 6 get lineto d7 0 ne { i3 7 get f0
add i2 6 get f9 add f8 sub lineto f8 i2 6
get f9 add f8 sub lineto f8 f8 lineto i3 7
get f0 add f8 lineto } { i3 7 get f0 add c2
sub f8 add i2 6 get lineto f8 c4 f9 add lineto
i3 7 get f0 add c2 sub f8 add f9 lineto }
ifelse closepath fill } if b4 14 eq { /e7
d2 f9 2 mul sub 2 mul 10 idiv def /e8 d1 3
idiv def e8 d3 mul .5 add e7 lt { /e7 e8 d3
mul .5 add cvi def } { /e8 e7 d3 div .5 add
cvi def } ifelse d1 e8 sub 2 mod 1 eq { /e8
e8 1 sub def } if e8 1 lt { /e8 1 def d1 e8
sub 2 mod 1 eq { /e8 2 def } if } if /e9 d1
e8 sub 2 idiv def /e0 e7 2 idiv def e0 0 eq
{ /e0 1 def } if /b9 d2 f9 sub e0 sub e7 sub
def e9 b9 e9 e8 add b9 e7 add a4 /b9 b9 e0
sub def /f1 b9 f9 sub e0 sub def e9 b9 f1
sub e9 e8 add b9 a4 } if b4 15 eq { /f2 d1
def /f3 d2 2 f9 1 add mul sub def f2 d3 mul
.5 add f3 lt { /f3 f2 d3 mul .5 add cvi def
} { /f2 f3 d3 div .5 add cvi def } ifelse
d1 f2 sub 2 mod 1 eq { /f2 f2 1 sub def }
if d2 f3 sub 2 mod 1 eq { /f3 f3 1 sub def
} if /e0 d2 f3 sub 2 idiv def /f1 d1 f2 sub
2 idiv def /e8 f2 2 add 3 idiv def /e7 f3
2 add 3 idiv def f1 e0 e7 add f1 f2 add e0
f3 add e7 sub a4 f1 e8 add e0 f1 f2 add e8
sub e0 f3 add a4 } if b4 16 eq { /e3 i2 2
get f9 2 div add def /e4 d1 d2 2 idiv div
def e4 d3 mul 2 lt { /e4 2 d3 div def } if
e4 1 ge { /e4 e4 ceiling def } { /e4 1 1 e4
div floor div def } ifelse /c8 f8 def f0 2
idiv f0 2 div ne { /c8 e4 .5 mul f8 add def
} if /c3 d1 i3 1 get sub def /e5 c3 c8 sub
f8 sub e4 div def /c5 i3 1 get c8 add def
/c6 d1 f8 sub def c5 e3 moveto c6 e3 e5 add
lineto c6 e3 e5 sub lineto closepath fill
} if b4 17 eq { /c3 d1 1 add 2 div def /c4
c3 d3 mul floor def /c3 c3 f0 sub 1 add 2
div floor 2 mul f0 add def /c4 c4 f9 sub 1
add 2 div floor 2 mul f9 add def /c5 i3 1
get c3 f0 sub 2 div floor sub def /e3 i2 2
get c4 f9 sub 2 div floor sub def c5 e3 moveto
c5 c3 add e3 lineto c5 c3 add e3 c4 add lineto
c5 e3 c4 add lineto closepath fill } if b4
0 lt { exit } if } loop } bind def /f4 { /f5
exch def /d2 exch def /d1 exch def matrix
currentmatrix 1 1 idtransform f5 0 ne { exch
} if /f7 exch abs def /f6 exch abs def /d2
d2 f7 div ceiling cvi def /d1 d1 f6 div ceiling
cvi def /d3 f6 f7 div def d3 1 lt { /f8 .001
d3 mul def } { /f8 .001 d3 div def } ifelse
/f0 d1 12 idiv 1 add def /f9 d2 30 idiv 1
add def f0 d3 mul .5 add f9 lt { /f9 f0 d3
mul .5 add cvi def } { /f0 f9 d3 div .5 add
cvi def } ifelse f0 0 lt { /f0 0 def } if
f9 0 lt { /f9 0 def } if d3 1 gt { /i4 .4
d3 div def } { /i4 .4 d3 mul def } ifelse
/i3 16 array def /i2 25 array def i3 0 0 put
i3 3 d1 f0 sub put i2 5 0 put i2 6 d2 f9 sub
put /g1 d1 f0 3 mul sub 2 idiv def /g2 d2
f9 5 mul sub 4 idiv def /g3 g1 2 mul f0 3
mul add def /g4 g2 2 mul f9 3 mul add def
g1 d3 mul .5 add g2 gt { /g1 g4 d3 div .5
add cvi f0 3 mul sub 2 idiv def } { /g2 g3
d3 mul .5 add cvi f9 3 mul sub 2 idiv def
} ifelse i3 0 0 put i3 1 g1 f0 add put i3
2 i3 1 get g1 add f0 add put i2 0 d2 g2 4
mul f9 5 mul add sub 1 add 2 idiv put i2 1
i2 0 get g2 add f9 add put i2 2 i2 1 get g2
add f9 add put i2 3 i2 2 get g2 add f9 add
put i2 4 i2 3 get g2 add f9 add put i2 8 i2
2 get put d2 40 lt { /g5 d2 3 f9 mul sub 2
add 3 idiv def i2 7 i2 2 get g5 sub f9 sub
put /g5 d2 3 f9 mul sub 3 idiv def i2 9 i2
2 get f9 add g5 add put i2 23 -1 put i2 24
-1 put } { i2 7 i2 8 get d2 2 mul 5 div .5
add cvi sub put i2 23 i2 7 get d2 5 div .5
add cvi add put i2 24 i2 7 get d2 3 mul 5
div .5 add cvi add put i2 9 i2 7 get d2 4
mul 5 div .5 add cvi add put } ifelse /g6
d2 f9 6 mul sub def /g7 g6 4 add 5 idiv def
g7 f9 add d3 div 2 mul d1 gt { /g7 d1 2 div
d3 mul f9 sub cvi def } if g7 0 lt { /g7 0
def } if /g8 g6 g7 2 mul sub 3 idiv def /g9
g6 g7 2 mul sub g8 sub 2 idiv def i2 10 f9
g9 add put i2 11 i2 10 get f9 add g7 add put
i2 12 i2 11 get f9 add g8 add put i2 13 i2
12 get f9 add g7 add put /g0 d2 d3 div .5
add cvi d1 sub 1 add 2 idiv def /h1 i2 11
get i2 10 get sub f9 add 2 div d3 div .5 add
cvi def d1 g0 sub h1 lt { /g0 d1 h1 sub def
} if g0 f0 lt { /g0 f0 def } if i3 7 g0 f0
sub put i3 6 d1 g0 sub put } bind def end
/i5 { a1 begin f4 i3 4 i3 6 get h1 sub put
i3 5 d1 g0 add g0 add 1.2 mul cvi f0 sub 2
idiv g0 sub put /h2 d2 f9 2 mul sub .33 mul
cvi def h2 1 lt { /h2 1 def } if i2 14 f9
h2 add put /g6 d2 f9 4 mul sub def /g7 g6
2 add 3 idiv def /g8 g6 g7 sub 2 idiv def
i2 15 f9 g8 add put i2 16 i2 15 get g7 add
put i3 8 d1 g7 d1 mul d2 div 1.3 mul sub cvi
f0 sub put /g0 i3 7 get f0 add def /h3 d2
d3 div .5 add 3.5 div cvi def h3 3 f0 mul
lt { /h3 3 f0 mul def } if /h4 0 def h3 g0
gt { h3 g0 f0 add lt { /h3 g0 f0 add def }
if /h4 1 def } if /h5 h3 d3 mul .5 add cvi
def i3 9 i3 6 get h3 add f0 sub put i3 12
i3 7 get h3 sub f0 add put h4 1 eq { i3 9
i3 9 get d1 sub put i3 12 i3 12 get d1 add
put } if /g7 d2 h5 sub 2 idiv def g7 0 lt
{ /g7 0 def } if i2 18 i2 5 get g7 add put
i2 19 i2 6 get g7 sub put /h6 h3 d3 mul .5
add cvi def i2 17 h6 f9 sub put i2 20 i2 6
get h6 sub f9 add put /h7 h5 d3 div .5 add
cvi def /g7 d1 h7 sub 2 idiv def g7 0 lt {
/g7 0 def } if i3 10 i3 0 get g7 add put i3
11 i3 3 get g7 sub put h4 1 eq { a3 46 [ 4
236 0 18 0 7 0 19 0 7 -1 ] put a3 47 [ 9 6
5 3 18 9 6 19 3 6 1 6 5 6 -1 ] put a3 48 [
9 0 5 10 18 9 11 5 3 18 9 0 19 10 6 9 11 19
3 6 9 9 17 12 20 4 235 -1 ] put a3 49 [ 9
0 5 7 18 9 0 19 7 6 1 7 5 6 -1 ] put a3 50
[ 4 240 0 18 6 3 0 19 6 3 -1 ] put a3 51 [
4 235 1 10 5 17 1 11 5 17 0 17 10 11 1 10
20 6 1 11 20 6 0 20 10 11 0 18 12 3 0 19 12
3 1 12 18 19 0 18 0 9 0 19 0 9 1 9 18 19 -1
] put } if i3 13 d1 f0 add 2 idiv put /d8
d1 4 div d3 mul .5 add cvi def f9 2 mod 1
eq { /d8 d8 .5 sub def } if i2 21 i2 2 get
f9 2 div add d8 sub cvi put i2 22 i2 2 get
f9 2 div add d8 add ceiling cvi f9 sub put
i3 14 i3 1 get f0 sub dup 0 lt { pop 0 } if
put i3 15 i3 1 get f0 add dup i3 3 get gt
{ pop i3 3 get } if put setmatrix d1 d2 idtransform
abs exch abs exch end } bind def /i6 { a1
begin /h8 exch def /h0 exch def /h9 exch def
h8 { /i1 exch def matrix currentmatrix h9
h0 translate 1 -1 scale 1 1 idtransform abs
exch abs exch scale 1 1 itransform dup cvi
sub exch dup cvi sub exch translate i1 b1
setmatrix /h9 h9 i7 add def } forall end }
bind def 